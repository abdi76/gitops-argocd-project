apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-cicd-app
  labels:
    app: k8s-cicd-app
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: k8s-cicd-app
  template:
    metadata:
      labels:
        app: k8s-cicd-app
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        argocd.argoproj.io/tracking-id: k8s-cicd-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - k8s-cicd-app
            topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001  # Changed: Must be > 10000
        runAsGroup: 10001  # Added: Must be > 10000
        fsGroup: 10001  # Changed: Must be > 10000
      containers:
      - name: k8s-cicd-app
        image: k8s-cicd-app:v1.0.0  # Changed: Use specific tag instead of latest
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: APP_VERSION
          value: "1.0.0"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
            ephemeral-storage: "1Gi"  # Added: Required by kube-score
          limits:
            memory: "128Mi"
            cpu: "100m"
            ephemeral-storage: "2Gi"  # Added: Required by kube-score
        livenessProbe:
          httpGet:
            path: /health/live  # Changed: Different from readiness probe
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready  # Changed: Different from liveness probe
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001  # Changed: Must be > 10000
          runAsGroup: 10001  # Added: Must be > 10000
          capabilities:
            drop:
            - ALL
---
# NetworkPolicy to fix the critical NetworkPolicy issue
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: k8s-cicd-app-netpol
  namespace: k8s-cicd-dev  # Make sure this matches your namespace
spec:
  podSelector:
    matchLabels:
      app: k8s-cicd-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: k8s-cicd-dev
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS outbound
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 80
